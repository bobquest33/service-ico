apiVersion: v1
kind: Namespace
metadata:
  name: ico-service
---
apiVersion: v1
kind: Service
metadata:
  name: ico-service
  namespace: ico-service
spec:
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
  type: NodePort
  selector:
    app: webapp
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: webapp
  namespace: ico-service
spec:
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  replicas: 1
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - image: gcr.io/rehive-services/ico-service:latest
        imagePullPolicy: Always
        name: ico-service
        ports:
        - containerPort: 8000
        command: ['/bin/sh','-c', 'gunicorn config.wsgi:application --config file:config/gunicorn.py']
        envFrom:
          - secretRef:
              name: ico-service
          - configMapRef:
              name: ico-service
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8000
          initialDelaySeconds: 20
          timeoutSeconds: 5
          periodSeconds: 20
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 20
          timeoutSeconds: 5
          periodSeconds: 20
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ico-service
  namespace: ico-service
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - ico.services.rehive.io
    secretName: ico-service-tls
  rules:
  - host: ico.services.rehive.io
    http:
      paths:
      - path: /
        backend:
          serviceName: ico-service
          servicePort: 80 
